{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNEADqMWHX/9C5kMh/2p4aA"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# **Building Linear Regression Model using Diabetes dataset**"],"metadata":{"id":"5NAnoH0IQQa7"}},{"cell_type":"markdown","source":["# Import Library"],"metadata":{"id":"ZWJsqmrCQmnK"}},{"cell_type":"code","source":["from sklearn import datasets"],"metadata":{"id":"3cXTSU3YO7gb"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Import dataset"],"metadata":{"id":"VTD_TrAtQ5be"}},{"cell_type":"code","source":["diabetes = datasets.load_diabetes()"],"metadata":{"id":"METPnq1bO7lJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["diabetes"],"metadata":{"id":"AwSPiLV2O7og","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706197024801,"user_tz":360,"elapsed":83,"user":{"displayName":"Hemanth Kumar Ramanadham","userId":"13109035848493515808"}},"outputId":"4bdedffd-ac7c-42ae-b54d-7d5492ce2b4a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'data': array([[ 0.03807591,  0.05068012,  0.06169621, ..., -0.00259226,\n","          0.01990749, -0.01764613],\n","        [-0.00188202, -0.04464164, -0.05147406, ..., -0.03949338,\n","         -0.06833155, -0.09220405],\n","        [ 0.08529891,  0.05068012,  0.04445121, ..., -0.00259226,\n","          0.00286131, -0.02593034],\n","        ...,\n","        [ 0.04170844,  0.05068012, -0.01590626, ..., -0.01107952,\n","         -0.04688253,  0.01549073],\n","        [-0.04547248, -0.04464164,  0.03906215, ...,  0.02655962,\n","          0.04452873, -0.02593034],\n","        [-0.04547248, -0.04464164, -0.0730303 , ..., -0.03949338,\n","         -0.00422151,  0.00306441]]),\n"," 'target': array([151.,  75., 141., 206., 135.,  97., 138.,  63., 110., 310., 101.,\n","         69., 179., 185., 118., 171., 166., 144.,  97., 168.,  68.,  49.,\n","         68., 245., 184., 202., 137.,  85., 131., 283., 129.,  59., 341.,\n","         87.,  65., 102., 265., 276., 252.,  90., 100.,  55.,  61.,  92.,\n","        259.,  53., 190., 142.,  75., 142., 155., 225.,  59., 104., 182.,\n","        128.,  52.,  37., 170., 170.,  61., 144.,  52., 128.,  71., 163.,\n","        150.,  97., 160., 178.,  48., 270., 202., 111.,  85.,  42., 170.,\n","        200., 252., 113., 143.,  51.,  52., 210.,  65., 141.,  55., 134.,\n","         42., 111.,  98., 164.,  48.,  96.,  90., 162., 150., 279.,  92.,\n","         83., 128., 102., 302., 198.,  95.,  53., 134., 144., 232.,  81.,\n","        104.,  59., 246., 297., 258., 229., 275., 281., 179., 200., 200.,\n","        173., 180.,  84., 121., 161.,  99., 109., 115., 268., 274., 158.,\n","        107.,  83., 103., 272.,  85., 280., 336., 281., 118., 317., 235.,\n","         60., 174., 259., 178., 128.,  96., 126., 288.,  88., 292.,  71.,\n","        197., 186.,  25.,  84.,  96., 195.,  53., 217., 172., 131., 214.,\n","         59.,  70., 220., 268., 152.,  47.,  74., 295., 101., 151., 127.,\n","        237., 225.,  81., 151., 107.,  64., 138., 185., 265., 101., 137.,\n","        143., 141.,  79., 292., 178.,  91., 116.,  86., 122.,  72., 129.,\n","        142.,  90., 158.,  39., 196., 222., 277.,  99., 196., 202., 155.,\n","         77., 191.,  70.,  73.,  49.,  65., 263., 248., 296., 214., 185.,\n","         78.,  93., 252., 150.,  77., 208.,  77., 108., 160.,  53., 220.,\n","        154., 259.,  90., 246., 124.,  67.,  72., 257., 262., 275., 177.,\n","         71.,  47., 187., 125.,  78.,  51., 258., 215., 303., 243.,  91.,\n","        150., 310., 153., 346.,  63.,  89.,  50.,  39., 103., 308., 116.,\n","        145.,  74.,  45., 115., 264.,  87., 202., 127., 182., 241.,  66.,\n","         94., 283.,  64., 102., 200., 265.,  94., 230., 181., 156., 233.,\n","         60., 219.,  80.,  68., 332., 248.,  84., 200.,  55.,  85.,  89.,\n","         31., 129.,  83., 275.,  65., 198., 236., 253., 124.,  44., 172.,\n","        114., 142., 109., 180., 144., 163., 147.,  97., 220., 190., 109.,\n","        191., 122., 230., 242., 248., 249., 192., 131., 237.,  78., 135.,\n","        244., 199., 270., 164.,  72.,  96., 306.,  91., 214.,  95., 216.,\n","        263., 178., 113., 200., 139., 139.,  88., 148.,  88., 243.,  71.,\n","         77., 109., 272.,  60.,  54., 221.,  90., 311., 281., 182., 321.,\n","         58., 262., 206., 233., 242., 123., 167.,  63., 197.,  71., 168.,\n","        140., 217., 121., 235., 245.,  40.,  52., 104., 132.,  88.,  69.,\n","        219.,  72., 201., 110.,  51., 277.,  63., 118.,  69., 273., 258.,\n","         43., 198., 242., 232., 175.,  93., 168., 275., 293., 281.,  72.,\n","        140., 189., 181., 209., 136., 261., 113., 131., 174., 257.,  55.,\n","         84.,  42., 146., 212., 233.,  91., 111., 152., 120.,  67., 310.,\n","         94., 183.,  66., 173.,  72.,  49.,  64.,  48., 178., 104., 132.,\n","        220.,  57.]),\n"," 'frame': None,\n"," 'DESCR': '.. _diabetes_dataset:\\n\\nDiabetes dataset\\n----------------\\n\\nTen baseline variables, age, sex, body mass index, average blood\\npressure, and six blood serum measurements were obtained for each of n =\\n442 diabetes patients, as well as the response of interest, a\\nquantitative measure of disease progression one year after baseline.\\n\\n**Data Set Characteristics:**\\n\\n  :Number of Instances: 442\\n\\n  :Number of Attributes: First 10 columns are numeric predictive values\\n\\n  :Target: Column 11 is a quantitative measure of disease progression one year after baseline\\n\\n  :Attribute Information:\\n      - age     age in years\\n      - sex\\n      - bmi     body mass index\\n      - bp      average blood pressure\\n      - s1      tc, total serum cholesterol\\n      - s2      ldl, low-density lipoproteins\\n      - s3      hdl, high-density lipoproteins\\n      - s4      tch, total cholesterol / HDL\\n      - s5      ltg, possibly log of serum triglycerides level\\n      - s6      glu, blood sugar level\\n\\nNote: Each of these 10 feature variables have been mean centered and scaled by the standard deviation times the square root of `n_samples` (i.e. the sum of squares of each column totals 1).\\n\\nSource URL:\\nhttps://www4.stat.ncsu.edu/~boos/var.select/diabetes.html\\n\\nFor more information see:\\nBradley Efron, Trevor Hastie, Iain Johnstone and Robert Tibshirani (2004) \"Least Angle Regression,\" Annals of Statistics (with discussion), 407-499.\\n(https://web.stanford.edu/~hastie/Papers/LARS/LeastAngle_2002.pdf)\\n',\n"," 'feature_names': ['age',\n","  'sex',\n","  'bmi',\n","  'bp',\n","  's1',\n","  's2',\n","  's3',\n","  's4',\n","  's5',\n","  's6'],\n"," 'data_filename': 'diabetes_data_raw.csv.gz',\n"," 'target_filename': 'diabetes_target.csv.gz',\n"," 'data_module': 'sklearn.datasets.data'}"]},"metadata":{},"execution_count":4}]},{"cell_type":"markdown","source":["# Description of dataset\n"],"metadata":{"id":"a_AfQKioRPHy"}},{"cell_type":"code","source":["print(diabetes.DESCR)"],"metadata":{"id":"QLHweRfpO7sw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706197108450,"user_tz":360,"elapsed":113,"user":{"displayName":"Hemanth Kumar Ramanadham","userId":"13109035848493515808"}},"outputId":"d205d020-f571-48de-ff56-84b58c1767c0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":[".. _diabetes_dataset:\n","\n","Diabetes dataset\n","----------------\n","\n","Ten baseline variables, age, sex, body mass index, average blood\n","pressure, and six blood serum measurements were obtained for each of n =\n","442 diabetes patients, as well as the response of interest, a\n","quantitative measure of disease progression one year after baseline.\n","\n","**Data Set Characteristics:**\n","\n","  :Number of Instances: 442\n","\n","  :Number of Attributes: First 10 columns are numeric predictive values\n","\n","  :Target: Column 11 is a quantitative measure of disease progression one year after baseline\n","\n","  :Attribute Information:\n","      - age     age in years\n","      - sex\n","      - bmi     body mass index\n","      - bp      average blood pressure\n","      - s1      tc, total serum cholesterol\n","      - s2      ldl, low-density lipoproteins\n","      - s3      hdl, high-density lipoproteins\n","      - s4      tch, total cholesterol / HDL\n","      - s5      ltg, possibly log of serum triglycerides level\n","      - s6      glu, blood sugar level\n","\n","Note: Each of these 10 feature variables have been mean centered and scaled by the standard deviation times the square root of `n_samples` (i.e. the sum of squares of each column totals 1).\n","\n","Source URL:\n","https://www4.stat.ncsu.edu/~boos/var.select/diabetes.html\n","\n","For more information see:\n","Bradley Efron, Trevor Hastie, Iain Johnstone and Robert Tibshirani (2004) \"Least Angle Regression,\" Annals of Statistics (with discussion), 407-499.\n","(https://web.stanford.edu/~hastie/Papers/LARS/LeastAngle_2002.pdf)\n","\n"]}]},{"cell_type":"markdown","source":["# Feature Names\n"],"metadata":{"id":"oTsO8MHHR4vI"}},{"cell_type":"code","source":["print(diabetes.feature_names)"],"metadata":{"id":"dINh_PcxO76Z","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706197254484,"user_tz":360,"elapsed":101,"user":{"displayName":"Hemanth Kumar Ramanadham","userId":"13109035848493515808"}},"outputId":"707fa608-4643-44c7-d229-97f5c3556e97"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["['age', 'sex', 'bmi', 'bp', 's1', 's2', 's3', 's4', 's5', 's6']\n"]}]},{"cell_type":"markdown","source":["# Create X, Y matrices"],"metadata":{"id":"qUkmrwiMO8Ej"}},{"cell_type":"code","source":["X = diabetes.data\n","Y = diabetes.target"],"metadata":{"id":"GuF9BgRUO9fV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Dimensions of matrices\n","X.shape, Y.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-cSw22OiSO4u","executionInfo":{"status":"ok","timestamp":1706197348379,"user_tz":360,"elapsed":4,"user":{"displayName":"Hemanth Kumar Ramanadham","userId":"13109035848493515808"}},"outputId":"ae5ebdaf-1aad-422b-df3f-8bde1c8f81ed"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((442, 10), (442,))"]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["# Another way to define data matrices\n"],"metadata":{"id":"2Vilt0egSgdB"}},{"cell_type":"code","source":["X, Y = datasets.load_diabetes(return_X_y=True)"],"metadata":{"id":"cDxEo7UPO9ha"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X.shape , Y.shape"],"metadata":{"id":"RmBiNOHUO9jT","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706197436306,"user_tz":360,"elapsed":103,"user":{"displayName":"Hemanth Kumar Ramanadham","userId":"13109035848493515808"}},"outputId":"a4bc95b4-7b49-404d-c9ae-ccc562aafc87"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((442, 10), (442,))"]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["# **Load the Boston Housing dataset**"],"metadata":{"id":"1Zw3Wd5oTfC8"}},{"cell_type":"code","source":["# Import Library\n","import pandas as pd"],"metadata":{"id":"7RXaZl1nO9lY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Run bash command to import dataset\n","! wget https://github.com/dataprofessor/data/raw/master/BostonHousing.csv"],"metadata":{"id":"AP4jpbTzO9nO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1706197705962,"user_tz":360,"elapsed":774,"user":{"displayName":"Hemanth Kumar Ramanadham","userId":"13109035848493515808"}},"outputId":"a8c2a20d-dfc7-4e7b-827b-e60f6728abb2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["--2024-01-25 15:48:25--  https://github.com/dataprofessor/data/raw/master/BostonHousing.csv\n","Resolving github.com (github.com)... 140.82.113.4\n","Connecting to github.com (github.com)|140.82.113.4|:443... connected.\n","HTTP request sent, awaiting response... 302 Found\n","Location: https://raw.githubusercontent.com/dataprofessor/data/master/BostonHousing.csv [following]\n","--2024-01-25 15:48:25--  https://raw.githubusercontent.com/dataprofessor/data/master/BostonHousing.csv\n","Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 185.199.108.133, 185.199.109.133, 185.199.110.133, ...\n","Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|185.199.108.133|:443... connected.\n","HTTP request sent, awaiting response... 200 OK\n","Length: 36242 (35K) [text/plain]\n","Saving to: ‘BostonHousing.csv’\n","\n","BostonHousing.csv   100%[===================>]  35.39K  --.-KB/s    in 0.003s  \n","\n","2024-01-25 15:48:25 (11.4 MB/s) - ‘BostonHousing.csv’ saved [36242/36242]\n","\n"]}]},{"cell_type":"code","source":["# Read the csv file\n","BHousing = pd.read_csv('BostonHousing.csv')\n","BHousing.head()"],"metadata":{"id":"b8jn-XAsO9o9","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1706197776182,"user_tz":360,"elapsed":91,"user":{"displayName":"Hemanth Kumar Ramanadham","userId":"13109035848493515808"}},"outputId":"ffc095f9-3704-4278-a1e3-4b975e767346"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      crim    zn  indus  chas    nox     rm   age     dis  rad  tax  ptratio  \\\n","0  0.00632  18.0   2.31     0  0.538  6.575  65.2  4.0900    1  296     15.3   \n","1  0.02731   0.0   7.07     0  0.469  6.421  78.9  4.9671    2  242     17.8   \n","2  0.02729   0.0   7.07     0  0.469  7.185  61.1  4.9671    2  242     17.8   \n","3  0.03237   0.0   2.18     0  0.458  6.998  45.8  6.0622    3  222     18.7   \n","4  0.06905   0.0   2.18     0  0.458  7.147  54.2  6.0622    3  222     18.7   \n","\n","        b  lstat  medv  \n","0  396.90   4.98  24.0  \n","1  396.90   9.14  21.6  \n","2  392.83   4.03  34.7  \n","3  394.63   2.94  33.4  \n","4  396.90   5.33  36.2  "],"text/html":["\n","  <div id=\"df-abf69968-e04f-4f5c-b7b8-ab20339b0d1d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>crim</th>\n","      <th>zn</th>\n","      <th>indus</th>\n","      <th>chas</th>\n","      <th>nox</th>\n","      <th>rm</th>\n","      <th>age</th>\n","      <th>dis</th>\n","      <th>rad</th>\n","      <th>tax</th>\n","      <th>ptratio</th>\n","      <th>b</th>\n","      <th>lstat</th>\n","      <th>medv</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.00632</td>\n","      <td>18.0</td>\n","      <td>2.31</td>\n","      <td>0</td>\n","      <td>0.538</td>\n","      <td>6.575</td>\n","      <td>65.2</td>\n","      <td>4.0900</td>\n","      <td>1</td>\n","      <td>296</td>\n","      <td>15.3</td>\n","      <td>396.90</td>\n","      <td>4.98</td>\n","      <td>24.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.02731</td>\n","      <td>0.0</td>\n","      <td>7.07</td>\n","      <td>0</td>\n","      <td>0.469</td>\n","      <td>6.421</td>\n","      <td>78.9</td>\n","      <td>4.9671</td>\n","      <td>2</td>\n","      <td>242</td>\n","      <td>17.8</td>\n","      <td>396.90</td>\n","      <td>9.14</td>\n","      <td>21.6</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.02729</td>\n","      <td>0.0</td>\n","      <td>7.07</td>\n","      <td>0</td>\n","      <td>0.469</td>\n","      <td>7.185</td>\n","      <td>61.1</td>\n","      <td>4.9671</td>\n","      <td>2</td>\n","      <td>242</td>\n","      <td>17.8</td>\n","      <td>392.83</td>\n","      <td>4.03</td>\n","      <td>34.7</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.03237</td>\n","      <td>0.0</td>\n","      <td>2.18</td>\n","      <td>0</td>\n","      <td>0.458</td>\n","      <td>6.998</td>\n","      <td>45.8</td>\n","      <td>6.0622</td>\n","      <td>3</td>\n","      <td>222</td>\n","      <td>18.7</td>\n","      <td>394.63</td>\n","      <td>2.94</td>\n","      <td>33.4</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.06905</td>\n","      <td>0.0</td>\n","      <td>2.18</td>\n","      <td>0</td>\n","      <td>0.458</td>\n","      <td>7.147</td>\n","      <td>54.2</td>\n","      <td>6.0622</td>\n","      <td>3</td>\n","      <td>222</td>\n","      <td>18.7</td>\n","      <td>396.90</td>\n","      <td>5.33</td>\n","      <td>36.2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-abf69968-e04f-4f5c-b7b8-ab20339b0d1d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-abf69968-e04f-4f5c-b7b8-ab20339b0d1d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-abf69968-e04f-4f5c-b7b8-ab20339b0d1d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c51d96e5-1c9d-429e-94af-a56c1608593a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c51d96e5-1c9d-429e-94af-a56c1608593a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c51d96e5-1c9d-429e-94af-a56c1608593a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["# Dimensions of Bhousing dataset\n","BHousing.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i9iV7-wXTvKI","executionInfo":{"status":"ok","timestamp":1706197804185,"user_tz":360,"elapsed":92,"user":{"displayName":"Hemanth Kumar Ramanadham","userId":"13109035848493515808"}},"outputId":"294ce2f2-a1f2-4425-b2a2-39dff09553ef"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(506, 14)"]},"metadata":{},"execution_count":20}]},{"cell_type":"markdown","source":["# Split data into X & Y variables"],"metadata":{"id":"07-O4amkUQOs"}},{"cell_type":"code","source":["Y = BHousing.medv\n","Y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"NDEl1PGNTv4i","executionInfo":{"status":"ok","timestamp":1706197891046,"user_tz":360,"elapsed":102,"user":{"displayName":"Hemanth Kumar Ramanadham","userId":"13109035848493515808"}},"outputId":"e5dbc7f4-9664-44c4-99c5-2c05356aae13"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      24.0\n","1      21.6\n","2      34.7\n","3      33.4\n","4      36.2\n","       ... \n","501    22.4\n","502    20.6\n","503    23.9\n","504    22.0\n","505    11.9\n","Name: medv, Length: 506, dtype: float64"]},"metadata":{},"execution_count":23}]},{"cell_type":"code","source":["X = BHousing.drop(['medv'], axis=1)\n","X"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"E_SdjhoyTwGT","executionInfo":{"status":"ok","timestamp":1706197945194,"user_tz":360,"elapsed":317,"user":{"displayName":"Hemanth Kumar Ramanadham","userId":"13109035848493515808"}},"outputId":"68e40584-06f8-4c5a-cc19-7b0657890187"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        crim    zn  indus  chas    nox     rm   age     dis  rad  tax  \\\n","0    0.00632  18.0   2.31     0  0.538  6.575  65.2  4.0900    1  296   \n","1    0.02731   0.0   7.07     0  0.469  6.421  78.9  4.9671    2  242   \n","2    0.02729   0.0   7.07     0  0.469  7.185  61.1  4.9671    2  242   \n","3    0.03237   0.0   2.18     0  0.458  6.998  45.8  6.0622    3  222   \n","4    0.06905   0.0   2.18     0  0.458  7.147  54.2  6.0622    3  222   \n","..       ...   ...    ...   ...    ...    ...   ...     ...  ...  ...   \n","501  0.06263   0.0  11.93     0  0.573  6.593  69.1  2.4786    1  273   \n","502  0.04527   0.0  11.93     0  0.573  6.120  76.7  2.2875    1  273   \n","503  0.06076   0.0  11.93     0  0.573  6.976  91.0  2.1675    1  273   \n","504  0.10959   0.0  11.93     0  0.573  6.794  89.3  2.3889    1  273   \n","505  0.04741   0.0  11.93     0  0.573  6.030  80.8  2.5050    1  273   \n","\n","     ptratio       b  lstat  \n","0       15.3  396.90   4.98  \n","1       17.8  396.90   9.14  \n","2       17.8  392.83   4.03  \n","3       18.7  394.63   2.94  \n","4       18.7  396.90   5.33  \n","..       ...     ...    ...  \n","501     21.0  391.99   9.67  \n","502     21.0  396.90   9.08  \n","503     21.0  396.90   5.64  \n","504     21.0  393.45   6.48  \n","505     21.0  396.90   7.88  \n","\n","[506 rows x 13 columns]"],"text/html":["\n","  <div id=\"df-db031aa0-59f0-45ff-9155-f9685199ce3a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>crim</th>\n","      <th>zn</th>\n","      <th>indus</th>\n","      <th>chas</th>\n","      <th>nox</th>\n","      <th>rm</th>\n","      <th>age</th>\n","      <th>dis</th>\n","      <th>rad</th>\n","      <th>tax</th>\n","      <th>ptratio</th>\n","      <th>b</th>\n","      <th>lstat</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.00632</td>\n","      <td>18.0</td>\n","      <td>2.31</td>\n","      <td>0</td>\n","      <td>0.538</td>\n","      <td>6.575</td>\n","      <td>65.2</td>\n","      <td>4.0900</td>\n","      <td>1</td>\n","      <td>296</td>\n","      <td>15.3</td>\n","      <td>396.90</td>\n","      <td>4.98</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.02731</td>\n","      <td>0.0</td>\n","      <td>7.07</td>\n","      <td>0</td>\n","      <td>0.469</td>\n","      <td>6.421</td>\n","      <td>78.9</td>\n","      <td>4.9671</td>\n","      <td>2</td>\n","      <td>242</td>\n","      <td>17.8</td>\n","      <td>396.90</td>\n","      <td>9.14</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.02729</td>\n","      <td>0.0</td>\n","      <td>7.07</td>\n","      <td>0</td>\n","      <td>0.469</td>\n","      <td>7.185</td>\n","      <td>61.1</td>\n","      <td>4.9671</td>\n","      <td>2</td>\n","      <td>242</td>\n","      <td>17.8</td>\n","      <td>392.83</td>\n","      <td>4.03</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.03237</td>\n","      <td>0.0</td>\n","      <td>2.18</td>\n","      <td>0</td>\n","      <td>0.458</td>\n","      <td>6.998</td>\n","      <td>45.8</td>\n","      <td>6.0622</td>\n","      <td>3</td>\n","      <td>222</td>\n","      <td>18.7</td>\n","      <td>394.63</td>\n","      <td>2.94</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.06905</td>\n","      <td>0.0</td>\n","      <td>2.18</td>\n","      <td>0</td>\n","      <td>0.458</td>\n","      <td>7.147</td>\n","      <td>54.2</td>\n","      <td>6.0622</td>\n","      <td>3</td>\n","      <td>222</td>\n","      <td>18.7</td>\n","      <td>396.90</td>\n","      <td>5.33</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>501</th>\n","      <td>0.06263</td>\n","      <td>0.0</td>\n","      <td>11.93</td>\n","      <td>0</td>\n","      <td>0.573</td>\n","      <td>6.593</td>\n","      <td>69.1</td>\n","      <td>2.4786</td>\n","      <td>1</td>\n","      <td>273</td>\n","      <td>21.0</td>\n","      <td>391.99</td>\n","      <td>9.67</td>\n","    </tr>\n","    <tr>\n","      <th>502</th>\n","      <td>0.04527</td>\n","      <td>0.0</td>\n","      <td>11.93</td>\n","      <td>0</td>\n","      <td>0.573</td>\n","      <td>6.120</td>\n","      <td>76.7</td>\n","      <td>2.2875</td>\n","      <td>1</td>\n","      <td>273</td>\n","      <td>21.0</td>\n","      <td>396.90</td>\n","      <td>9.08</td>\n","    </tr>\n","    <tr>\n","      <th>503</th>\n","      <td>0.06076</td>\n","      <td>0.0</td>\n","      <td>11.93</td>\n","      <td>0</td>\n","      <td>0.573</td>\n","      <td>6.976</td>\n","      <td>91.0</td>\n","      <td>2.1675</td>\n","      <td>1</td>\n","      <td>273</td>\n","      <td>21.0</td>\n","      <td>396.90</td>\n","      <td>5.64</td>\n","    </tr>\n","    <tr>\n","      <th>504</th>\n","      <td>0.10959</td>\n","      <td>0.0</td>\n","      <td>11.93</td>\n","      <td>0</td>\n","      <td>0.573</td>\n","      <td>6.794</td>\n","      <td>89.3</td>\n","      <td>2.3889</td>\n","      <td>1</td>\n","      <td>273</td>\n","      <td>21.0</td>\n","      <td>393.45</td>\n","      <td>6.48</td>\n","    </tr>\n","    <tr>\n","      <th>505</th>\n","      <td>0.04741</td>\n","      <td>0.0</td>\n","      <td>11.93</td>\n","      <td>0</td>\n","      <td>0.573</td>\n","      <td>6.030</td>\n","      <td>80.8</td>\n","      <td>2.5050</td>\n","      <td>1</td>\n","      <td>273</td>\n","      <td>21.0</td>\n","      <td>396.90</td>\n","      <td>7.88</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>506 rows × 13 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-db031aa0-59f0-45ff-9155-f9685199ce3a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-db031aa0-59f0-45ff-9155-f9685199ce3a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-db031aa0-59f0-45ff-9155-f9685199ce3a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-283a9c79-ec1e-4335-9196-93bbf784d629\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-283a9c79-ec1e-4335-9196-93bbf784d629')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-283a9c79-ec1e-4335-9196-93bbf784d629 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_cc4be5d7-03da-4966-846d-001309b183f8\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('X')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_cc4be5d7-03da-4966-846d-001309b183f8 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('X');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":24}]},{"cell_type":"markdown","source":["# Data Split"],"metadata":{"id":"xQdAYy2wUtK9"}},{"cell_type":"code","source":["# Import library\n","from sklearn.model_selection import train_test_split"],"metadata":{"id":"1Bm8HAakTwr4"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Split into 80/20"],"metadata":{"id":"YvGGICsbVAqD"}},{"cell_type":"code","source":["X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2)"],"metadata":{"id":"fM-KWuLBTwva"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Data Dimension\n","X_train.shape, Y_train.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"n9gVsHDQTwzk","executionInfo":{"status":"ok","timestamp":1706199453445,"user_tz":360,"elapsed":294,"user":{"displayName":"Hemanth Kumar Ramanadham","userId":"13109035848493515808"}},"outputId":"729d93da-cf87-4c0e-f707-9029f1c09760"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((404, 13), (404,))"]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["X_test.shape, Y_test.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"sSuQksFkTw3K","executionInfo":{"status":"ok","timestamp":1706198238548,"user_tz":360,"elapsed":2,"user":{"displayName":"Hemanth Kumar Ramanadham","userId":"13109035848493515808"}},"outputId":"5be75353-f627-418b-e2e9-4e49c24f0ff7"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["((102, 13), (102,))"]},"metadata":{},"execution_count":35}]},{"cell_type":"markdown","source":["# **Linear Regression Model**"],"metadata":{"id":"EFhNqIj4VyeQ"}},{"cell_type":"code","source":["# Import library\n","from sklearn import linear_model\n","from sklearn.metrics import r2_score, mean_squared_error"],"metadata":{"id":"E_HAzPC3Tw6v"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Build linear Regression Model"],"metadata":{"id":"ysGPdSbPWOqi"}},{"cell_type":"code","source":["# Defining the linear regression model\n","model = linear_model.LinearRegression()"],"metadata":{"id":"izxdZK4-Tw-S"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Build training model"],"metadata":{"id":"TaHhKLikWiSX"}},{"cell_type":"code","source":["model.fit(X_train,Y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"BmlhT8SvTxDD","executionInfo":{"status":"ok","timestamp":1706199462115,"user_tz":360,"elapsed":263,"user":{"displayName":"Hemanth Kumar Ramanadham","userId":"13109035848493515808"}},"outputId":"e6091bde-4019-470a-8d25-2a7c926e21dd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-3 {color: black;background-color: white;}#sk-container-id-3 pre{padding: 0;}#sk-container-id-3 div.sk-toggleable {background-color: white;}#sk-container-id-3 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-3 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-3 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-3 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-3 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-3 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-3 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-3 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-3 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-3 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-3 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-3 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-3 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-3 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-3 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-3 div.sk-item {position: relative;z-index: 1;}#sk-container-id-3 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-3 div.sk-item::before, #sk-container-id-3 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-3 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-3 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-3 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-3 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-3 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-3 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-3 div.sk-label-container {text-align: center;}#sk-container-id-3 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-3 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-3\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-3\" type=\"checkbox\" checked><label for=\"sk-estimator-id-3\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":68}]},{"cell_type":"code","source":["Y_pred = model.predict(X_test)"],"metadata":{"id":"rhz84EbUTxGo"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# **Prediction Results**"],"metadata":{"id":"MxUbbS8oXE06"}},{"cell_type":"code","source":["print('Coefficients: ', model.coef_)\n","print('\\nIntercept: ', round(model.intercept_,2))\n","print('\\nMean Squared Error: %.2f'% mean_squared_error(Y_test, Y_pred))\n","print('\\nCoefficient of determination(R^2): %.2f'% r2_score(Y_test, Y_pred))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BiW3_dcETxKz","executionInfo":{"status":"ok","timestamp":1706199474391,"user_tz":360,"elapsed":83,"user":{"displayName":"Hemanth Kumar Ramanadham","userId":"13109035848493515808"}},"outputId":"c81057ec-45ec-41fd-9217-7ca60cc22d8f"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Coefficients:  [-1.16759229e-01  5.30449491e-02  3.04060877e-02  3.49809307e+00\n"," -2.10126535e+01  3.32234601e+00  1.28238939e-02 -1.47064125e+00\n","  3.58539296e-01 -1.24809183e-02 -9.88905048e-01  8.43552980e-03\n"," -5.80918002e-01]\n","\n","Intercept:  41.51\n","\n","Mean Squared Error: 18.06\n","\n","Coefficient of determination(R^2): 0.77\n"]}]},{"cell_type":"markdown","source":["# **Scatter Plots**"],"metadata":{"id":"aQaMZ2DbYs_H"}},{"cell_type":"code","source":["# import library\n","import seaborn as sns\n","import matplotlib.pyplot as plt"],"metadata":{"id":"Zc2M2YTxTxTI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["Y_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aUfKndVRTxXT","executionInfo":{"status":"ok","timestamp":1706199498091,"user_tz":360,"elapsed":112,"user":{"displayName":"Hemanth Kumar Ramanadham","userId":"13109035848493515808"}},"outputId":"d7563be2-f11e-4c32-c78e-e121a095a5e0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["115    18.3\n","485    21.2\n","158    24.3\n","88     23.6\n","474    13.8\n","       ... \n","336    19.5\n","187    32.0\n","213    28.1\n","390    15.1\n","383    12.3\n","Name: medv, Length: 102, dtype: float64"]},"metadata":{},"execution_count":72}]},{"cell_type":"code","source":["import numpy as np\n","np.array(Y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"K2FgS3icTxbe","executionInfo":{"status":"ok","timestamp":1706199500185,"user_tz":360,"elapsed":140,"user":{"displayName":"Hemanth Kumar Ramanadham","userId":"13109035848493515808"}},"outputId":"d5deed90-5b87-4a70-8a86-72e3c248b41e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([18.3, 21.2, 24.3, 23.6, 13.8, 20.2, 36.1, 13.6, 24.1,  9.6, 21.7,\n","       35.4, 27.5, 22.9, 24.5, 31.6, 11. ,  8.5, 21. , 14.5, 16.7, 20.1,\n","       18.4, 43.8, 17.8, 19.6, 29.6, 21.2, 22.8, 26.6, 13. , 31.5, 14.4,\n","       13.1, 34.9, 25. , 13.2, 20.9, 20.3, 23.7, 33.2, 22.7, 12.1, 21.7,\n","       30.3, 41.3, 18.6, 33.3,  8.7, 33.2, 19.6, 21.2, 30.5, 50. , 22.8,\n","        5. , 20.7, 44.8, 21.2, 19.5, 23.9, 27.5, 21.9, 17.1,  7. , 20. ,\n","       19. , 21.7, 28. , 13.3, 19.6, 10.9, 28.6, 23.2, 25.1, 31.2, 13.8,\n","       36.5, 33.1, 23.2, 37.2, 10.4, 19.7, 19.5, 13.9, 21.4, 28.2, 21.4,\n","       19.4, 14.8, 19.9, 27. , 23. , 50. , 19.4, 10.2, 14.2, 19.5, 32. ,\n","       28.1, 15.1, 12.3])"]},"metadata":{},"execution_count":73}]},{"cell_type":"code","source":["Y_pred"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Gi9-8a6TTxgQ","executionInfo":{"status":"ok","timestamp":1706199502103,"user_tz":360,"elapsed":196,"user":{"displayName":"Hemanth Kumar Ramanadham","userId":"13109035848493515808"}},"outputId":"b5e4b983-83bf-44ec-bda4-695f0589b523"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([20.41771072, 22.59823498, 29.56569293, 30.58638412, 17.28437052,\n","       22.73349256, 32.89576603, 13.42100835, 20.81418133, 14.6098327 ,\n","       23.56996113, 31.24520844, 24.30738741, 25.24651124, 19.95156488,\n","       32.42969634, 14.29669963, 16.62582665, 20.48049528, 18.74882595,\n","       20.75187468, 15.66776041, 18.8647725 , 34.27173151,  8.50249895,\n","       19.09832624, 24.60301268, 23.22150878, 24.35793785, 27.31577029,\n","       17.23421911, 32.62403851,  8.72221095, 14.11212952, 34.19941225,\n","       25.71101275,  7.94514702, 20.84965765, 19.57345936, 27.37555169,\n","       36.28224559, 23.17872422, 18.21999244, 23.1855775 , 32.77781987,\n","       33.43286009, 17.12851368, 36.33537496,  8.67785109, 31.76576737,\n","       17.91973813, 21.15675117, 30.42513906, 35.11758237, 28.70273522,\n","        6.12615392, 21.18882253, 37.95662107, 20.90528785, 19.87188945,\n","       24.47936067, 32.86596852, 24.47427362, 17.10351041,  7.86490206,\n","       22.30272236, 15.03630568, 20.12724607, 28.2795378 , 16.39267482,\n","       23.88780634, 14.31322828, 28.26833499, 17.31996931, 30.96072033,\n","       28.4257998 ,  0.83204952, 35.52027277, 32.69070731, 27.4921186 ,\n","       32.58932225,  7.02334235, 21.24931644, 16.97198554, 13.31079773,\n","       22.37578631, 32.89807734, 23.92068964, 26.09866273, 14.40493573,\n","       19.12560694, 33.94183211, 24.1618781 , 36.92004408, 16.661124  ,\n","        6.5130673 , 18.47060822, 19.92044201, 33.53581521, 24.72358987,\n","       17.63685068, 13.18535596])"]},"metadata":{},"execution_count":74}]},{"cell_type":"code","source":["sns.scatterplot(x=Y_test, y=Y_pred)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"dsQRJI_RTxkZ","executionInfo":{"status":"ok","timestamp":1706199504087,"user_tz":360,"elapsed":381,"user":{"displayName":"Hemanth Kumar Ramanadham","userId":"13109035848493515808"}},"outputId":"88eba15c-8675-4ce8-fdfa-50eeed505c36"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='medv'>"]},"metadata":{},"execution_count":75},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["sns.scatterplot(x=Y_test, y=Y_pred, marker='^', alpha=0.75)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":466},"id":"icnD8bCAZVEl","executionInfo":{"status":"ok","timestamp":1706199610130,"user_tz":360,"elapsed":754,"user":{"displayName":"Hemanth Kumar Ramanadham","userId":"13109035848493515808"}},"outputId":"bb16c43a-68d9-4e40-d817-76f3164a4839"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='medv'>"]},"metadata":{},"execution_count":84},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"PydWfLr8ZVJU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"YyttmQI4ZVM7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"3ymxzRPjZVRE"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"d3KS3ii0ZVVO"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"XEbqAdHzZVY0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"gBwBu4BlZVc_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"sw1y5EjdZVhI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"5ll8DdoOZVlT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"_MaofnQcZVo5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"X5w6ELdSZVtD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"Y-A2uJhxZVwn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"74Mw5sO8ZV0x"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"DzvZi-_RZV4-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"vtm4Y-EqZV9H"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"Ew3WeMMcTxok"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"y0NsboX2O9q0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"UE0LLBWKO9uY"},"execution_count":null,"outputs":[]}]}